// stubs.ts
import astroDtsBuilder from "@matthiesenxyz/astrodtsbuilder";
import { name } from "../package.json";

// Create the config DTS file
const config = astroDtsBuilder();

// Add a note to the top of the file
config.addSingleLineNote(
  `This file is generated by '${name}' and should not be modified manually.`
);

// Add general type definitions
config.addUnformattedString(`
interface BaseEmailRequest {
  to: string | string[];
  subject: string;
  templateName: string;
  props: Record<string, unknown>;
  headers?: Record<string, string>;
}
`);

// Add the config module
config.addModule("astro-mailer/config", {
  defaultExport: {
    typeDef: `import("${name}/schema").ResendConfig`,
    singleLineDescription: "The Resend configuration options",
  },
});

// Add the templates module
config.addModule("astro-mailer/templates", {
  defaultExport: {
    typeDef: "Record<string, any>",
    singleLineDescription: "Map of template names to their implementations",
  },
});

// Add the types module
config.addModule("astro-mailer/types", {
  namedExports: [
    {
      name: "EmailRequest",
      typeDef: "BaseEmailRequest",
      singleLineDescription: "Email request configuration type",
    },
  ],
});

// Export the DTS files
export default {
  config: config.makeAstroInjectedType("config.d.ts"),
};
